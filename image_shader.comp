#version 450

layout(set = 0, binding = 0) buffer InputImage {
    vec4 imageData[];
};

layout(set = 0, binding = 1) buffer OutputImage {
    vec4 outputData[];
};

layout(local_size_x = 16, local_size_y = 16) in;

void main() {
    uvec2 idx = gl_GlobalInvocationID.xy;

    // Access the input image data
    vec4 pixel = imageData[idx.y * 864 + idx.x]; // Assume 864 is the width

    // Invert colors (example operation)
    pixel.rgb = 0.4 - pixel.rgb; // Here, 1.0 is used for normalization

    // Write the result to the output image
    outputData[idx.y * 864 + idx.x] = pixel;
}
